{"version":3,"file":"app/api/scrape/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/scrape/route.ts","webpack://_N_E/./src/app/api/scrape/route.ts?263b","webpack://_N_E/?c52f","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import type { NextRequest } from \"next/server\";\n\nexport const runtime = \"edge\";\n\nasync function scrapeText(url: string): Promise<string> {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const html = await response.text();\n    const text = extractBodyText(html);\n    return text;\n  } catch (error) {\n    console.error(`Error fetching URL ${url}:`, error);\n    return \"\";\n  }\n}\n\nfunction extractBodyText(html: string): string {\n  const bodyStartTag = \"<body\";\n  const bodyEndTag = \"</body>\";\n  const bodyStartIndex = html.indexOf(bodyStartTag);\n  const bodyEndIndex = html.indexOf(bodyEndTag, bodyStartIndex);\n  if (bodyStartIndex !== -1 && bodyEndIndex !== -1) {\n    const bodyContent = html.slice(\n      bodyStartIndex,\n      bodyEndIndex + bodyEndTag.length\n    );\n    const bodyText = bodyContent\n      .replace(/<script[\\s\\S]*?<\\/script>/gi, \"\")\n      .replace(/<style[\\s\\S]*?<\\/style>/gi, \"\")\n      .replace(/<[^>]+>/g, \"\")\n      .replace(/\\s+/g, \" \")\n      .trim();\n    return bodyText.slice(0, 5000);\n  }\n  return \"\";\n}\n\nconst cache = new Map<string, string>();\n\nexport async function POST(req: NextRequest) {\n  const urlParams = new URL(req.url).searchParams;\n  const urls = urlParams.get(\"urls\")?.split(\",\") ?? [];\n  if (urls.length === 0) {\n    return new Response(\n      JSON.stringify({ error: \"Please provide URLs to scrape\" }),\n      {\n        status: 400,\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n\n  try {\n    const scrapingPromises = urls.map(async (url) => {\n      if (cache.has(url)) {\n        return cache.get(url);\n      }\n      const text = await scrapeText(url);\n      cache.set(url, text);\n      return text;\n    });\n    const results = await Promise.all(scrapingPromises);\n    const formattedResponse = results\n      .map((result, index) => `${urls[index]}\\nWebsite data: ${result}`)\n      .join(\"\\n\\n\");\n    return new Response(formattedResponse, {\n      status: 200,\n      headers: { \"Content-Type\": \"text/plain\" },\n    });\n  } catch (error) {\n    console.error(\"Scraping error:\", error);\n    return new Response(\n      JSON.stringify({ error: `Failed to scrape the pages: ${error}` }),\n      {\n        status: 500,\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/pc-1827/Desktop/practice/assignments/blubeeai_assignment/omniplex/src/app/api/scrape/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/scrape/route\",\n        pathname: \"/api/scrape\",\n        filename: \"route\",\n        bundlePath: \"app/api/scrape/route\"\n    },\n    resolvedPagePath: \"/home/pc-1827/Desktop/practice/assignments/blubeeai_assignment/omniplex/src/app/api/scrape/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/scrape/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=%2Fhome%2Fpc-1827%2FDesktop%2Fpractice%2Fassignments%2Fblubeeai_assignment%2Fomniplex%2Fsrc%2Fapp&appPaths=%2Fapi%2Fscrape%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/scrape/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","runtime","scrapeText","url","response","fetch","ok","status","html","text","extractBodyText","bodyEndTag","bodyStartIndex","indexOf","bodyEndIndex","bodyText","slice","length","replace","trim","error","console","cache","Map","POST","req","urlParams","URL","searchParams","urls","get","split","Response","JSON","stringify","headers","scrapingPromises","map","has","set","formattedResponse","results","Promise","all","result","index","join","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fscrape_2Froute_ts_page_2Fapi_2Fscrape_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGc2NyYXBlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzY3JhcGUlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnNjcmFwZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcGMtMTgyNyUyRkRlc2t0b3AlMkZwcmFjdGljZSUyRmFzc2lnbm1lbnRzJTJGYmx1YmVlYWlfYXNzaWdubWVudCUyRm9tbmlwbGV4JTJGc3JjJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRnNjcmFwZSUyRnJvdXRlJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_standalone_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}